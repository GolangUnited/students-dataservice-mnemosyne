// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: lessons/lessons.proto

package lessons

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The basic message containing the primary information about a lesson.
type LessonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Presentation string                 `protobuf:"bytes,2,opt,name=presentation,proto3" json:"presentation,omitempty"`
	VideoLink    string                 `protobuf:"bytes,3,opt,name=video_link,json=videoLink,proto3" json:"video_link,omitempty"`
	LessonDate   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=lesson_date,json=lessonDate,proto3" json:"lesson_date,omitempty"`
	Homework     string                 `protobuf:"bytes,5,opt,name=homework,proto3" json:"homework,omitempty"`
	LecturerId   uint32                 `protobuf:"varint,6,opt,name=lecturer_id,json=lecturerId,proto3" json:"lecturer_id,omitempty"`
	GroupId      uint32                 `protobuf:"varint,7,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Language     string                 `protobuf:"bytes,8,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *LessonRequest) Reset() {
	*x = LessonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lessons_lessons_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonRequest) ProtoMessage() {}

func (x *LessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lessons_lessons_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonRequest.ProtoReflect.Descriptor instead.
func (*LessonRequest) Descriptor() ([]byte, []int) {
	return file_lessons_lessons_proto_rawDescGZIP(), []int{0}
}

func (x *LessonRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LessonRequest) GetPresentation() string {
	if x != nil {
		return x.Presentation
	}
	return ""
}

func (x *LessonRequest) GetVideoLink() string {
	if x != nil {
		return x.VideoLink
	}
	return ""
}

func (x *LessonRequest) GetLessonDate() *timestamppb.Timestamp {
	if x != nil {
		return x.LessonDate
	}
	return nil
}

func (x *LessonRequest) GetHomework() string {
	if x != nil {
		return x.Homework
	}
	return ""
}

func (x *LessonRequest) GetLecturerId() uint32 {
	if x != nil {
		return x.LecturerId
	}
	return 0
}

func (x *LessonRequest) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *LessonRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type LessonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Presentation string                 `protobuf:"bytes,2,opt,name=presentation,proto3" json:"presentation,omitempty"`
	VideoLink    string                 `protobuf:"bytes,3,opt,name=video_link,json=videoLink,proto3" json:"video_link,omitempty"`
	LessonDate   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=lesson_date,json=lessonDate,proto3" json:"lesson_date,omitempty"`
	Homework     string                 `protobuf:"bytes,5,opt,name=homework,proto3" json:"homework,omitempty"`
	LecturerId   uint32                 `protobuf:"varint,6,opt,name=lecturer_id,json=lecturerId,proto3" json:"lecturer_id,omitempty"`
	GroupId      uint32                 `protobuf:"varint,7,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Language     string                 `protobuf:"bytes,8,opt,name=language,proto3" json:"language,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Deleted      bool                   `protobuf:"varint,11,opt,name=deleted,proto3" json:"deleted,omitempty"`
}

func (x *LessonResponse) Reset() {
	*x = LessonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lessons_lessons_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonResponse) ProtoMessage() {}

func (x *LessonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lessons_lessons_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonResponse.ProtoReflect.Descriptor instead.
func (*LessonResponse) Descriptor() ([]byte, []int) {
	return file_lessons_lessons_proto_rawDescGZIP(), []int{1}
}

func (x *LessonResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LessonResponse) GetPresentation() string {
	if x != nil {
		return x.Presentation
	}
	return ""
}

func (x *LessonResponse) GetVideoLink() string {
	if x != nil {
		return x.VideoLink
	}
	return ""
}

func (x *LessonResponse) GetLessonDate() *timestamppb.Timestamp {
	if x != nil {
		return x.LessonDate
	}
	return nil
}

func (x *LessonResponse) GetHomework() string {
	if x != nil {
		return x.Homework
	}
	return ""
}

func (x *LessonResponse) GetLecturerId() uint32 {
	if x != nil {
		return x.LecturerId
	}
	return 0
}

func (x *LessonResponse) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *LessonResponse) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *LessonResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *LessonResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *LessonResponse) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

//The basic message containing information about all lessons from db
type Lessons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lessons []*LessonResponse `protobuf:"bytes,1,rep,name=Lessons,proto3" json:"Lessons,omitempty"`
}

func (x *Lessons) Reset() {
	*x = Lessons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lessons_lessons_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lessons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lessons) ProtoMessage() {}

func (x *Lessons) ProtoReflect() protoreflect.Message {
	mi := &file_lessons_lessons_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lessons.ProtoReflect.Descriptor instead.
func (*Lessons) Descriptor() ([]byte, []int) {
	return file_lessons_lessons_proto_rawDescGZIP(), []int{2}
}

func (x *Lessons) GetLessons() []*LessonResponse {
	if x != nil {
		return x.Lessons
	}
	return nil
}

//Basic request/response containing id of the lesson
type Id struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Id) Reset() {
	*x = Id{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lessons_lessons_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Id) ProtoMessage() {}

func (x *Id) ProtoReflect() protoreflect.Message {
	mi := &file_lessons_lessons_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Id.ProtoReflect.Descriptor instead.
func (*Id) Descriptor() ([]byte, []int) {
	return file_lessons_lessons_proto_rawDescGZIP(), []int{3}
}

func (x *Id) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LecturerId *uint32 `protobuf:"varint,1,opt,name=lecturer_id,json=lecturerId,proto3,oneof" json:"lecturer_id,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lessons_lessons_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_lessons_lessons_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_lessons_lessons_proto_rawDescGZIP(), []int{4}
}

func (x *Filter) GetLecturerId() uint32 {
	if x != nil && x.LecturerId != nil {
		return *x.LecturerId
	}
	return 0
}

var File_lessons_lessons_proto protoreflect.FileDescriptor

var file_lessons_lessons_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x2f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x03, 0x0a,
	0x0d, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e,
	0x6b, 0x12, 0x3b, 0x0a, 0x0b, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x3a, 0x72, 0x92, 0x41, 0x6f, 0x0a, 0x6d, 0x2a, 0x12, 0x4c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x20, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0xd2, 0x01, 0x0c,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xd2, 0x01, 0x0a, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0xd2, 0x01, 0x0b, 0x6c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0xd2, 0x01, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0xd2, 0x01, 0x0b, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0xd2, 0x01, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0xd2, 0x01, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x98, 0x04, 0x0a, 0x0e, 0x4c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x3b, 0x0a, 0x0b,
	0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6d,
	0x65, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d,
	0x65, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x65, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x3a, 0x72, 0x92,
	0x41, 0x6f, 0x0a, 0x6d, 0x2a, 0x12, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x20, 0x6a, 0x73, 0x6f,
	0x6e, 0x20, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0xd2, 0x01, 0x0c, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xd2, 0x01, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f,
	0x6c, 0x69, 0x6e, 0x6b, 0xd2, 0x01, 0x0b, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0xd2, 0x01, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0xd2, 0x01, 0x0b,
	0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64, 0xd2, 0x01, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0xd2, 0x01, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x22, 0x62, 0x0a, 0x07, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x0a, 0x07,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x3a,
	0x24, 0x92, 0x41, 0x21, 0x0a, 0x1f, 0x2a, 0x13, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x20,
	0x6a, 0x73, 0x6f, 0x6e, 0x20, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0xd2, 0x01, 0x07, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x73, 0x22, 0x30, 0x0a, 0x02, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x3a, 0x1a, 0x92, 0x41, 0x17,
	0x0a, 0x15, 0x2a, 0x0e, 0x49, 0x64, 0x20, 0x6a, 0x73, 0x6f, 0x6e, 0x20, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0xd2, 0x01, 0x02, 0x69, 0x64, 0x22, 0x60, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x24, 0x0a, 0x0b, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x0a, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x3a, 0x20, 0x92, 0x41, 0x1d, 0x0a, 0x1b, 0x2a, 0x19,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x20, 0x6a, 0x73,
	0x6f, 0x6e, 0x20, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6c, 0x65,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x48, 0x5a, 0x46, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x55, 0x6e,
	0x69, 0x74, 0x65, 0x64, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x2d, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x73,
	0x79, 0x6e, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lessons_lessons_proto_rawDescOnce sync.Once
	file_lessons_lessons_proto_rawDescData = file_lessons_lessons_proto_rawDesc
)

func file_lessons_lessons_proto_rawDescGZIP() []byte {
	file_lessons_lessons_proto_rawDescOnce.Do(func() {
		file_lessons_lessons_proto_rawDescData = protoimpl.X.CompressGZIP(file_lessons_lessons_proto_rawDescData)
	})
	return file_lessons_lessons_proto_rawDescData
}

var file_lessons_lessons_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_lessons_lessons_proto_goTypes = []interface{}{
	(*LessonRequest)(nil),         // 0: lessons.LessonRequest
	(*LessonResponse)(nil),        // 1: lessons.LessonResponse
	(*Lessons)(nil),               // 2: lessons.Lessons
	(*Id)(nil),                    // 3: lessons.Id
	(*Filter)(nil),                // 4: lessons.Filter
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_lessons_lessons_proto_depIdxs = []int32{
	5, // 0: lessons.LessonRequest.lesson_date:type_name -> google.protobuf.Timestamp
	5, // 1: lessons.LessonResponse.lesson_date:type_name -> google.protobuf.Timestamp
	5, // 2: lessons.LessonResponse.created_at:type_name -> google.protobuf.Timestamp
	5, // 3: lessons.LessonResponse.updated_at:type_name -> google.protobuf.Timestamp
	1, // 4: lessons.Lessons.Lessons:type_name -> lessons.LessonResponse
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_lessons_lessons_proto_init() }
func file_lessons_lessons_proto_init() {
	if File_lessons_lessons_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lessons_lessons_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lessons_lessons_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lessons_lessons_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lessons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lessons_lessons_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Id); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lessons_lessons_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_lessons_lessons_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lessons_lessons_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lessons_lessons_proto_goTypes,
		DependencyIndexes: file_lessons_lessons_proto_depIdxs,
		MessageInfos:      file_lessons_lessons_proto_msgTypes,
	}.Build()
	File_lessons_lessons_proto = out.File
	file_lessons_lessons_proto_rawDesc = nil
	file_lessons_lessons_proto_goTypes = nil
	file_lessons_lessons_proto_depIdxs = nil
}
