syntax = "proto3";

package user;
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/NEKETSKY/mnemosyne/pkg/api/user";


message Options {
  bool withContacts = 1;
  bool withResume = 2;
}

message Contact {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Contact json schema"
      required: ["telegram", "discord","communicationChannel"]
    }
  };
  string id = 1;
  string telegram = 2;
  string discord = 3;
  string communicationChannel = 4;
}

message Resume {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Resume json schema"
      required: "uploaded_resume"
      required: "mentors_note"
    }
  };
  string id = 1;
  string uploaded_resume = 2;
  string mentors_note = 3;
}

// The basic message containing the primary information about a user.
message User {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "User json schema"     
      required: ["last_name","first_name","email", "language", "english_level","photo","country","city","time_zone"]
    }
  };
  string id = 1;
  string last_name = 2 ;
  string first_name = 3 ;
  optional string middle_name = 4;
  string email = 5;
  string language = 6;
  string english_level = 7;
  string photo = 8;
  string experience = 9;
  string country = 10;
  string city = 11;
  string time_zone = 12;
  Contact contact = 13;
}
//The basic message containing information about all users from db
message Users {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Users json schema"     
      required: ["users"]
    }
  }; 
  repeated User users = 1;
}
//Basic request/response containing id of the user
message Id{
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Id json schema"     
      required: ["id"]
    }
  }; 
    string id = 1;
}
